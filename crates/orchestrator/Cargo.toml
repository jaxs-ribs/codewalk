[package]
name = "orchestrator"
version.workspace = true
edition.workspace = true
authors.workspace = true

[lib]
name = "orchestrator"
path = "src/lib.rs"

[[bin]]
name = "codewalk"
path = "src/main.rs"

[dependencies]
# Workspace dependencies
anyhow.workspace = true
tokio.workspace = true
serde.workspace = true
serde_json.workspace = true
async-trait.workspace = true

# Local crates
router = { path = "../router" }
control_center = { path = "../control_center" }
orchestrator-core = { path = "../orchestrator-core" }
protocol = { path = "../protocol" }

# Optional STT for TUI mic
stt = { path = "../stt", optional = true }

# TUI dependencies (optional)
ratatui = { version = "0.28", optional = true }
crossterm = { version = "0.28", optional = true }

# Utilities
lazy_static = "1.4"

# Relay client deps
tokio-tungstenite = "0.23"
futures-util = "0.3"
url = "2"
once_cell = "1.19"

[features]
# Build the full TUI by default and keep mic support to avoid regressions.
default = ["tui", "tui-stt", "tui-input"]

# Split concerns cleanly via feature flags.
# - tui: enables terminal UI and event handling
# - tui-stt: enables local mic + Groq transcription in the TUI
# - tui-input: allows free-text input from the TUI
tui = ["dep:ratatui", "dep:crossterm"]
tui-stt = ["dep:stt"]
tui-input = []
