# Project Phasing

## Phase 1: Basic Game Setup
So first we'll get the canvas on screen and draw the first snake. We'll set up a 400×400 canvas in the center of the page, create a snake object that starts as three blocks at (200,200) moving right, and render it with a nice green gradient. We'll add keyboard listeners for arrow keys so you can already change direction, though nothing else moves yet. When this phase is done, you'll be able to open index.html and see a green snake body on a black background that you can steer with arrow keys. Definition of done: snake renders correctly, arrow keys change direction without errors, and the canvas displays without layout issues in Chrome and Safari.

## Phase 2: Movement and Food
Next we'll make the snake crawl and give it something to eat. We'll add a game loop using requestAnimationFrame that moves the snake every 100 ms, wrapping it at the edges, and spawn a red apple at a random free cell. When the head hits the apple we'll grow the tail by one segment and drop a new apple. We'll also stop the snake from reversing into itself. Once complete, you can test by watching the snake glide across the board, eating apples and growing longer each time.

## Phase 3: Collision and Score
Then we'll add the danger and keep score. We'll detect collisions with the snake's own body and trigger a game-over screen that shows your final length and a restart button. While playing, we'll display the current score (length minus three) at the top of the canvas, updating it live as the snake eats. We'll also add a brief pause after death so you can see what happened. When this phase is done, you'll be able to run into your tail, see "Game Over – Score 7" flash up, and press Space to start fresh.

## Phase 4: Polish and Speed
Finally we'll juice it up for a finished feel. We'll replace the plain blocks with rounded segments, add a soft shadow under the snake, and draw a subtle grid so movement is clearer. Each apple eaten will increase the game speed by 5 %, and we'll add a high-score label that persists across reloads using localStorage. We'll also add touch controls: swipe anywhere to change direction so it plays nicely on phones. When this phase is done, you'll be able to play on your phone, feel the speed ramp up after the fifth apple, and see your best score of 42 still waiting after you refresh the page.